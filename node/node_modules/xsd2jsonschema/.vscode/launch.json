{
	"version": "0.2.0",
	// List of configurations. Add new configurations or edit existing ones.
	// ONLY "node" and "mono" are supported, change "type" to switch.
	"configurations": [
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "Example Live Conversion",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Action to take
			"request": "launch",
			// Workspace relative or absolute path to the program.
			"program": "${workspaceRoot}/example-live/example-live.js",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			"cwd": "${workspaceRoot}/",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": {
				"NODE_ENV": "development",
				"DEBUG": "xsd2jsonschema:BaseConverter,xsd2jsonschema:NamespaceManager"
			},
			// Use JavaScript source maps (if they exist).
			"sourceMaps": false
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "Convert and Save",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Action to take
			"request": "launch",
			// Workspace relative or absolute path to the program.
			"program": "${workspaceRoot}/examples/convert-and-save.js",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": ["convert"],
			"cwd": "${workspaceRoot}/",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": {
				"NODE_ENV": "development",
				"DEBUG": "xsd2jsonschema:BaseConverter,xsd2jsonschema:ParsingState"
			},
			// Use JavaScript source maps (if they exist).
			"sourceMaps": false
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "Annotation",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Action to take
			"request": "launch",
			// Workspace relative or absolute path to the program.
			"program": "${workspaceRoot}/examples/annotation.js",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			"cwd": "${workspaceRoot}/",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": {
				"NODE_ENV": "development",
				"DEBUG": "xsd2jsonschema:BaseConverter,xsd2jsonschema:ParsingState"
			},
			// Use JavaScript source maps (if they exist).
			"sourceMaps": false
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "Convert and Validate",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Action to take
			"request": "launch",
			// Workspace relative or absolute path to the program.
			"program": "${workspaceRoot}/examples/convert-and-validate.js",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": ["convert"],
			"cwd": "${workspaceRoot}/",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": {
				"NODE_ENV": "development",
				"DEBUG": "xsd2jsonschema:BaseConverter,xsd2jsonschema:ParsingState"
			},
			// Use JavaScript source maps (if they exist).
			"sourceMaps": false
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "Hello World",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Action to take
			"request": "launch",
			// Workspace relative or absolute path to the program.
			"program": "${workspaceRoot}/examples/hello-world.js",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": ["convert"],
			"cwd": "${workspaceRoot}/",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": {
				"NODE_ENV": "development",
				"DEBUG": "xsd2jsonschema:BaseConverter,xsd2jsonschema:ParsingState,xsd2jsonschema:Visitor"
			},
			// Use JavaScript source maps (if they exist).
			"sourceMaps": false
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "Visitors",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Action to take
			"request": "launch",
			// Workspace relative or absolute path to the program.
			"program": "${workspaceRoot}/examples/visitors.js",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": ["xml-usage"],
			"cwd": "${workspaceRoot}/",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": {
				"NODE_ENV": "development",
				"DEBUG": "xsd2jsonschema:XmlUsageVisitor*"
			},
			// Use JavaScript source maps (if they exist).
			"sourceMaps": false
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "Launch Functional Test",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Action to take
			"request": "launch",
			// Workspace relative or absolute path to the program.
			"program": "${workspaceRoot}/test/functional/allFunctionalTests.js",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			"cwd": "${workspaceRoot}/",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": {
				"NODE_ENV": "development",
				"DEBUG": "xsd2jsonschema:*"
			},
			// Use JavaScript source maps (if they exist).
			"sourceMaps": false
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "Launch Functional Test Jasmine",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Action to take
			"request": "launch",
			// Workspace relative or absolute path to the program.
			"program": "${workspaceRoot}/node_modules/.bin/jasmine",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": ["--config=test/unit/jasmine.json"],
			"cwd": "${workspaceRoot}/",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": {
				"NODE_ENV": "development",
				"DEBUG": "xsd2jsonschema:*"
			},
			// Use JavaScript source maps (if they exist).
			"sourceMaps": false
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "Launch Specification Test",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Action to take
			"request": "launch",
			// Workspace relative or absolute path to the program.
			"program": "${workspaceRoot}/test/specification/specificationTest.js",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": [],
			"cwd": "${workspaceRoot}/",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": {
				"NODE_ENV": "development",
				"DEBUG": "xsd2jsonschema:*"
			},
			// Use JavaScript source maps (if they exist).
			"sourceMaps": false
		},
		{
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "Launch Jasmine Test Suite",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Action to take
			"request": "launch",
			// Workspace relative or absolute path to the program.
			"program": "${workspaceRoot}/node_modules/.bin/jasmine",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
			"args": ["--config=test/unit/jasmine.json"],
			"cwd": "${workspaceRoot}/",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Optional arguments passed to the runtime executable.
			"runtimeArgs": ["--nolazy"],
			// Environment variables passed to the program.
			"env": {
				"NODE_ENV": "development",
				"DEBUG": "xsd2jsonschema:*"
			},
			// Use JavaScript source maps (if they exist).
			"sourceMaps": false
		},
		{
			"name": "Attach",
			"type": "node",
			// TCP/IP address. Default is "localhost".
			"address": "localhost",
			// Port to attach to.
            "request": "attach",
			"port": 5858,
			"sourceMaps": false
		}
	]
}
